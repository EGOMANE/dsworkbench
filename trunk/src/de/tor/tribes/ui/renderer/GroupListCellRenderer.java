/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GroupListCellRenderer.java
 *
 * Created on 21.12.2011, 08:01:06
 */
package de.tor.tribes.ui.renderer;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author jejkal
 */
public class GroupListCellRenderer extends javax.swing.JPanel implements ListCellRenderer {

    /** Creates new form GroupListCellRenderer */
    public GroupListCellRenderer() {
        initComponents();
    }

    @Override
    public Component getListCellRendererComponent(JList list, Object pValue, int pIndex, boolean pSelected, boolean pHasFocus) {
        if (pSelected) {
            setForeground(list.getSelectionForeground());
            super.setBackground(list.getSelectionBackground());
        } else {
            setForeground(list.getBackground());
            super.setBackground(list.getBackground());
        }
        ListItem item = (ListItem) pValue;
        jLabel1.setText(item.getName());
        if (item.isSpecial()) {
            if (item.getState() == 0) {
                jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_grey.png")));
            } else {
                jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_green.png")));
            }
        } else {
            if (pIndex == list.getModel().getSize() - 1) {
                jLabel2.setIcon(null);
            } else {
                switch (item.getState()) {
                    case 0:
                        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_red.png")));
                        break;
                    case 1:
                        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_green.png")));
                        break;
                    case 2:
                        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_yellow.png")));
                        break;
                }
            }
        }
        return this;

    }

    public void view() {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        DefaultListModel model = new DefaultListModel();
        model.addElement(new ListItem("Keine Gruppe"));
        model.addElement(new ListItem("Test1"));
        model.addElement(new ListItem("Test2"));
        model.addElement(new ListItem("Test3"));
        model.addElement(new ListItem("Test4"));
        model.addElement(new ListItem("Test5"));
        jList1.setModel(model);
        jList1.setCellRenderer(this);
        jList1.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    if (e.getButton() == MouseEvent.BUTTON1) {
                        fireClickedEvent();
                    } else {
                        fireResetEvent();
                    }
                }
            }
        });
        f.getContentPane().add(jScrollPane1);
        f.pack();
        f.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
            }
        });
        f.setVisible(true);
    }

    private void fireClickedEvent() {
        ListItem item = ((ListItem) jList1.getSelectedValue());
        if (item.isSpecial()) {
            item.switchState();
            for (int i = 1; i < jList1.getModel().getSize(); i++) {
                ListItem item1 = ((ListItem) jList1.getModel().getElementAt(i));
                item1.resetState();
            }
        } else {
            item.switchState();
            ((ListItem) jList1.getModel().getElementAt(0)).resetState();
        }
        jList1.repaint();
    }

    private void fireResetEvent() {
        ((ListItem) jList1.getSelectedValue()).resetState();
        jList1.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/bullet_ball_grey.png"))); // NOI18N
        add(jLabel2, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        new GroupListCellRenderer().view();
    }
}

class ListItem {

    private String name = null;
    private int state = 0;

    public ListItem(String pName) {
        name = pName;
    }

    public void resetState() {
        state = 0;
    }

    public void switchState() {
        state++;
        if (state == 3) {
            state = 0;
        }
    }

    public String getName() {
        return name;
    }

    public int getState() {
        return state;
    }

    public boolean isSpecial() {
        return name.equals("Keine Gruppe");
    }
}
