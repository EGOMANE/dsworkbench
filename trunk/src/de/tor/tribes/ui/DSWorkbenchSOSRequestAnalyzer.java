/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DSWorkbenchSOSRequestAnalyzer.java
 *
 * Created on Apr 18, 2010, 2:26:56 PM
 */
package de.tor.tribes.ui;

import de.tor.tribes.types.SOSRequest;
import de.tor.tribes.types.Tribe;
import de.tor.tribes.types.Village;
import de.tor.tribes.util.Constants;
import de.tor.tribes.util.parser.SOSParser;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.util.Date;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Torridity
 */
public class DSWorkbenchSOSRequestAnalyzer extends AbstractDSWorkbenchFrame {

    public static DSWorkbenchSOSRequestAnalyzer SINGLETON = null;
    private Hashtable<Tribe, SOSRequest> currentRequests;

    public static synchronized DSWorkbenchSOSRequestAnalyzer getSingleton() {
        if (SINGLETON == null) {
            SINGLETON = new DSWorkbenchSOSRequestAnalyzer();
        }
        return SINGLETON;
    }

    public void setup() {
        currentRequests = null;
        updateView();
    }

    /** Creates new form DSWorkbenchSOSRequestAnalyzer */
    DSWorkbenchSOSRequestAnalyzer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSosTextField = new javax.swing.JTextArea();
        jStatusLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jDefenderList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTargetList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTroopsInfoField = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        jWallLevelBar = new javax.swing.JProgressBar();
        jWallLevelText = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jAttacksTableScrollPanel = new javax.swing.JScrollPane();
        jAttacksTable = new javax.swing.JTable();
        jTaskPane1 = new com.l2fprod.common.swing.JTaskPane();
        jTaskPaneGroup1 = new com.l2fprod.common.swing.JTaskPaneGroup();
        jCleanupAttacksButton = new javax.swing.JButton();

        setTitle("SOS Analyzer");

        jPanel1.setBackground(new java.awt.Color(239, 235, 223));

        jLabel1.setText("SOS Anfrage");

        jSosTextField.setColumns(20);
        jSosTextField.setRows(5);
        jSosTextField.setToolTipText("SOS Anfragen hierhin kopieren");
        jSosTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fireSosTextChangedEvent(evt);
            }
        });
        jScrollPane1.setViewportView(jSosTextField);

        jStatusLabel.setText("Bitte SOS Anfrage in Eingbefeld einf√ºgen");
        jStatusLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Gefundene SOS Anfragen"));
        jPanel2.setOpaque(false);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(130, 132));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(130, 132));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(130, 132));

        jDefenderList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                fireDefenderSelectionChangedEvent(evt);
            }
        });
        jScrollPane2.setViewportView(jDefenderList);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Verteidiger");

        jScrollPane3.setMaximumSize(new java.awt.Dimension(130, 132));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(130, 132));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(130, 132));

        jTargetList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                fireTargetChangedEvent(evt);
            }
        });
        jScrollPane3.setViewportView(jTargetList);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Ziele");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Verteidigungsstatus"));
        jPanel3.setOpaque(false);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/wall.png"))); // NOI18N

        jTroopsInfoField.setContentType("text/html");
        jTroopsInfoField.setToolTipText("Truppen im Dorf");
        jScrollPane5.setViewportView(jTroopsInfoField);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/face.png"))); // NOI18N

        jWallLevelBar.setForeground(new java.awt.Color(0, 204, 0));
        jWallLevelBar.setMaximum(20);
        jWallLevelBar.setToolTipText("Wallstufe");
        jWallLevelBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jWallLevelBar.setBorderPainted(false);
        jWallLevelBar.setString("0");

        jWallLevelText.setText("0");
        jWallLevelText.setMaximumSize(new java.awt.Dimension(20, 14));
        jWallLevelText.setMinimumSize(new java.awt.Dimension(20, 14));
        jWallLevelText.setPreferredSize(new java.awt.Dimension(20, 14));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jWallLevelBar, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jWallLevelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jWallLevelBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jWallLevelText, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Angriffe"));
        jPanel4.setOpaque(false);

        jAttacksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Angreifer", "Herkunft", "Ankunft"
            }
        ));
        jAttacksTableScrollPanel.setViewportView(jAttacksTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAttacksTableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jAttacksTableScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTaskPane1.setOpaque(false);
        com.l2fprod.common.swing.PercentLayout percentLayout1 = new com.l2fprod.common.swing.PercentLayout();
        percentLayout1.setGap(14);
        percentLayout1.setOrientation(1);
        jTaskPane1.setLayout(percentLayout1);

        com.l2fprod.common.swing.PercentLayout percentLayout2 = new com.l2fprod.common.swing.PercentLayout();
        percentLayout2.setOrientation(1);
        jTaskPaneGroup1.getContentPane().setLayout(percentLayout2);

        jCleanupAttacksButton.setBackground(new java.awt.Color(239, 235, 223));
        jCleanupAttacksButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/garbage.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/tor/tribes/ui/Bundle"); // NOI18N
        jCleanupAttacksButton.setText(bundle.getString("DSWorkbenchAttackFrame.jCleanupAttacksButton.text")); // NOI18N
        jCleanupAttacksButton.setToolTipText(bundle.getString("DSWorkbenchAttackFrame.jCleanupAttacksButton.toolTipText")); // NOI18N
        jCleanupAttacksButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCleanupAttacksButtonfireCleanUpAttacksEvent(evt);
            }
        });
        jTaskPaneGroup1.getContentPane().add(jCleanupAttacksButton);

        jTaskPane1.add(jTaskPaneGroup1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                            .addComponent(jStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTaskPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTaskPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jStatusLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireSosTextChangedEvent(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_fireSosTextChangedEvent
        currentRequests = SOSParser.parse(jSosTextField.getText());
        if (currentRequests == null || currentRequests.isEmpty()) {
            jStatusLabel.setText("Keine g√ºltigen SOS Anfrage(n) gefunden");
            jStatusLabel.setBackground(Color.RED);
        } else {
            jStatusLabel.setText("SOS Anfrage(n) erfolgreich gelesen");
            jStatusLabel.setBackground(Color.GREEN);
        }

        updateView();
    }//GEN-LAST:event_fireSosTextChangedEvent

    private void fireDefenderSelectionChangedEvent(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fireDefenderSelectionChangedEvent

        Tribe t = (Tribe) jDefenderList.getSelectedValue();
        if (t == null || currentRequests == null) {
            return;
        }
        SOSRequest request = currentRequests.get(t);
        DefaultListModel targetModel = new DefaultListModel();
        Enumeration<Village> targetVillages = request.getTargets();
        while (targetVillages.hasMoreElements()) {
            targetModel.addElement(targetVillages.nextElement());
        }

        jTargetList.setModel(targetModel);
    }//GEN-LAST:event_fireDefenderSelectionChangedEvent

    private void fireTargetChangedEvent(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fireTargetChangedEvent

        Object[] targets = jTargetList.getSelectedValues();
        if (targets == null || currentRequests == null) {
            return;
        }
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Herkunft", "Einheit", "Ankunft"
                }) {

            Class[] types = new Class[]{
                Tribe.class, Village.class, Date.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        };

        String troopInfo = "";
        for (Object o : targets) {
            Village target = (Village) o;
            SOSRequest request = currentRequests.get(target.getTribe());
            SOSRequest.TargetInformation info = request.getTargetInformation(target);
            int wall = info.getWallLevel();
            jWallLevelText.setText(Integer.toString(wall));
            jWallLevelBar.setValue(wall);


            int r = 240 - ((wall >= 10) ? (wall - 1) * 12 : 0);
            int g = (wall >= 10) ? 120 + (wall - 10) * 12 : 120 - ((10 - wall) * 12);

            //240 0 0
            //240 120 0
            //0 240 *

            //wall = 240 - wall*12
            //wall > 10: g = 120 + (lev-10)*12, wall < 10: g = 120 - lev*12

            jWallLevelBar.setForeground(new Color(r, g, 0));
            troopInfo += info.getTroopInformationAsHTML() + "<BR/>";
            for (SOSRequest.TimedAttack attack : info.getAttacks()) {
                model.addRow(new Object[]{attack.getSource().getTribe(), attack.getSource(), new Date(attack.getlArriveTime())});
            }
        }

        jTroopsInfoField.setText("<html>" + troopInfo + "</html>");
        jAttacksTable.setModel(model);
        TableRowSorter<TableModel> attackSorter = new TableRowSorter<TableModel>(jAttacksTable.getModel());
        jAttacksTable.setRowSorter(attackSorter);
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = new DefaultTableCellRenderer().getTableCellRendererComponent(table, value, hasFocus, hasFocus, row, row);
                DefaultTableCellRenderer r = ((DefaultTableCellRenderer) c);
                r.setText("<html><b>" + r.getText() + "</b></html>");
                c.setBackground(Constants.DS_BACK);
                return c;
            }
        };

        for (int i = 0; i < jAttacksTable.getColumnCount(); i++) {
            jAttacksTable.getColumn(jAttacksTable.getColumnName(i)).setHeaderRenderer(headerRenderer);
        }
    }//GEN-LAST:event_fireTargetChangedEvent

    private void jCleanupAttacksButtonfireCleanUpAttacksEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCleanupAttacksButtonfireCleanUpAttacksEvent
    }//GEN-LAST:event_jCleanupAttacksButtonfireCleanUpAttacksEvent

    private void updateView() {
        // currentRequests
        if (currentRequests == null) {
            return;
        }

        Enumeration<Tribe> tribes = currentRequests.keys();
        DefaultListModel defenderModel = new DefaultListModel();
        while (tribes.hasMoreElements()) {
            SOSRequest request = currentRequests.get(tribes.nextElement());
            /* System.out.println(request.toBBCode());
            System.out.println("");
            System.out.println("-----------");
            System.out.println("");*/
            defenderModel.addElement(request.getDefender());
        }
        jDefenderList.setModel(defenderModel);
        jTargetList.setModel(new DefaultListModel());
        jTroopsInfoField.setText("");
        jAttacksTable.setModel(new DefaultTableModel(0, 0));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DSWorkbenchSOSRequestAnalyzer().setVisible(true);
            }
        });
    }

    @Override
    public void fireVillagesDraggedEvent(List<Village> pVillages, Point pDropLocation) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable jAttacksTable;
    private javax.swing.JScrollPane jAttacksTableScrollPanel;
    private javax.swing.JButton jCleanupAttacksButton;
    private javax.swing.JList jDefenderList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jSosTextField;
    private javax.swing.JLabel jStatusLabel;
    private javax.swing.JList jTargetList;
    private com.l2fprod.common.swing.JTaskPane jTaskPane1;
    private com.l2fprod.common.swing.JTaskPaneGroup jTaskPaneGroup1;
    private javax.swing.JTextPane jTroopsInfoField;
    private javax.swing.JProgressBar jWallLevelBar;
    private javax.swing.JLabel jWallLevelText;
    // End of variables declaration//GEN-END:variables
}
