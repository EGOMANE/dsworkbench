/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DSWorkbenchProfileDialog.java
 *
 * Created on Dec 17, 2010, 1:53:48 PM
 */
package de.tor.tribes.ui;

import de.tor.tribes.io.DataHolder;
import de.tor.tribes.io.ServerManager;
import de.tor.tribes.types.Tribe;
import de.tor.tribes.types.UserProfile;
import de.tor.tribes.util.GlobalOptions;
import de.tor.tribes.util.JOptionPaneHelper;
import de.tor.tribes.util.ProfileManager;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Torridity
 */
public class DSWorkbenchProfileDialog extends javax.swing.JDialog {

    private static DSWorkbenchProfileDialog SINGLETON = null;
    private UserProfile currentProfile = null;

    public static synchronized DSWorkbenchProfileDialog getSingleton() {
        if (SINGLETON == null) {
            SINGLETON = new DSWorkbenchProfileDialog();
        }
        return SINGLETON;
    }

    /** Creates new form DSWorkbenchProfileDialog */
    DSWorkbenchProfileDialog() {
        initComponents();
    }

    public void showModifyDialog(UserProfile pProfile) {
        String server = pProfile.getServerId();
        DefaultComboBoxModel serverModel = new DefaultComboBoxModel(new Object[]{server});
        jAccountServerBox.setModel(serverModel);
        jAccountServerBox.setEnabled(false);
        Collection<Tribe> tribes = DataHolder.getSingleton().getTribesForServer(server).values();
        Tribe[] aTribes = tribes.toArray(new Tribe[]{});
        Arrays.sort(aTribes, Tribe.CASE_INSENSITIVE_ORDER);
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        Tribe selection = null;
        for (Tribe tribe : aTribes) {
            if (tribe.getName().equals(pProfile.getTribeName())) {
                selection = tribe;
            }
            model.addElement(tribe);

        }
        jAccountTribeBox.setModel(model);
        jAccountTribeBox.setSelectedItem(selection);
        if (pProfile.isUVAccount()) {
            jIsUvAccount.setSelected(pProfile.isUVAccount());
            jUvIdField.setText(Integer.toString(pProfile.getUVId()));
            jUvIdField.setEnabled(true);
        } else {
            jIsUvAccount.setSelected(pProfile.isUVAccount());
            jUvIdField.setText("UV-ID");
            jUvIdField.setEnabled(false);
        }
        jDoCreateModifyAccountButton.setText("Aktualisieren");
        currentProfile = pProfile;
        pack();
        setVisible(true);
    }

    public void showAddProfileDialog() {
        String server = GlobalOptions.getSelectedServer();
        String[] localServers = ServerManager.getLocalServers();
        DefaultComboBoxModel serverModel = new DefaultComboBoxModel(localServers);
        jAccountServerBox.setModel(serverModel);
        jAccountServerBox.setSelectedItem(server);
        jAccountServerBox.setEnabled(true);
        Collection<Tribe> tribes = DataHolder.getSingleton().getTribesForServer(server).values();
        Tribe[] aTribes = tribes.toArray(new Tribe[]{});
        Arrays.sort(aTribes, Tribe.CASE_INSENSITIVE_ORDER);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (Tribe tribe : aTribes) {
            model.addElement(tribe);
        }
        jAccountTribeBox.setModel(model);
        jDoCreateModifyAccountButton.setText("Erstellen");
        currentProfile = null;
        pack();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jAccountServerBox = new javax.swing.JComboBox();
        jAccountTribeBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jIsUvAccount = new javax.swing.JCheckBox();
        jUvIdField = new javax.swing.JTextField();
        jDoCreateModifyAccountButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setTitle("Profile");

        jLabel2.setText("Server");

        jAccountServerBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fireServerChangedEvent(evt);
            }
        });

        jLabel3.setText("Spieler");

        jIsUvAccount.setText("UV-Account");
        jIsUvAccount.setOpaque(false);
        jIsUvAccount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fireChangeUVStateEvent(evt);
            }
        });

        jUvIdField.setText("UV-ID");
        jUvIdField.setEnabled(false);
        jUvIdField.setOpaque(false);

        jDoCreateModifyAccountButton.setText("Erstellen");
        jDoCreateModifyAccountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireDoCreateProfileEvent(evt);
            }
        });

        jButton5.setText("Abbrechen");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireDoCreateProfileEvent(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jIsUvAccount)
                        .addGap(18, 18, 18)
                        .addComponent(jUvIdField, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jAccountTribeBox, 0, 330, Short.MAX_VALUE)
                            .addComponent(jAccountServerBox, 0, 330, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDoCreateModifyAccountButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jAccountServerBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jAccountTribeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jIsUvAccount)
                    .addComponent(jUvIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDoCreateModifyAccountButton)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireChangeUVStateEvent(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fireChangeUVStateEvent
        jUvIdField.setEnabled(jIsUvAccount.isSelected());
    }//GEN-LAST:event_fireChangeUVStateEvent

    private void fireDoCreateProfileEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireDoCreateProfileEvent
        if (evt.getSource() == jDoCreateModifyAccountButton) {
            if (currentProfile == null) {
                //create new profile
                String server = (String) jAccountServerBox.getSelectedItem();
                Tribe tribe = (Tribe) jAccountTribeBox.getSelectedItem();
                Integer uvId = -1;
                if (jIsUvAccount.isSelected()) {
                    try {
                        uvId = Integer.parseInt(jUvIdField.getText());
                    } catch (Exception e) {
                        JOptionPaneHelper.showErrorBox(this, "Die UV-ID ist ungültig, da eine Zahl erwartet wird.", "Fehler");
                        return;
                    }
                }
                if (UserProfile.create(server, tribe.getName(), uvId, true) == null) {
                    JOptionPaneHelper.showErrorBox(this, "Fehler bei der Profilerstellung.", "Fehler");
                    return;
                }
            } else {
                //modify existing profile
                Tribe tribe = (Tribe) jAccountTribeBox.getSelectedItem();
                if (tribe != null) {
                    currentProfile.setTribeName(tribe.getName());
                }
                if (jIsUvAccount.isSelected()) {
                    try {
                        Integer uvId = Integer.parseInt(jUvIdField.getText());
                        currentProfile.setUVId(uvId);
                    } catch (Exception e) {
                        JOptionPaneHelper.showErrorBox(this, "Die UV-ID ist ungültig, da eine Zahl erwartet wird.", "Fehler");
                        return;
                    }
                } else {
                    currentProfile.setUVId(-1);
                }
                if (!currentProfile.storeProfileData()) {
                    JOptionPaneHelper.showErrorBox(this, "Fehler bei der Aktualisierung der Profildaten.", "Fehler");
                    return;
                }
            }
        }
        setVisible(false);
    }//GEN-LAST:event_fireDoCreateProfileEvent

    private void fireServerChangedEvent(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fireServerChangedEvent
        String server = (String) jAccountServerBox.getSelectedItem();
        Collection<Tribe> tribes = DataHolder.getSingleton().getTribesForServer(server).values();
        Tribe[] aTribes = tribes.toArray(new Tribe[]{});
        Arrays.sort(aTribes, Tribe.CASE_INSENSITIVE_ORDER);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (Tribe tribe : aTribes) {
            model.addElement(tribe);
        }
        jAccountTribeBox.setModel(model);

    }//GEN-LAST:event_fireServerChangedEvent

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DSWorkbenchProfileDialog.getSingleton().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jAccountServerBox;
    private javax.swing.JComboBox jAccountTribeBox;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jDoCreateModifyAccountButton;
    private javax.swing.JCheckBox jIsUvAccount;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jUvIdField;
    // End of variables declaration//GEN-END:variables
}
