/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.tor.tribes.ui.windows;

import de.tor.tribes.control.GenericManagerListener;
import de.tor.tribes.util.report.*;
import java.awt.BorderLayout;
import java.awt.Component;
import javax.swing.DefaultListModel;
import org.apache.log4j.ConsoleAppender;
import org.apache.log4j.Logger;

/**
 *
 * @author jejkal
 */
public class ReportRulesDialog extends javax.swing.JDialog implements GenericManagerListener {

    @Override
    public void dataChangedEvent() {
        rebuildRuleList();
    }

    @Override
    public void dataChangedEvent(String pGroup) {
        dataChangedEvent();
    }

    /**
     * Creates new form ReportRulesDialog
     */
    public ReportRulesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ReportManager.getSingleton().addManagerListener(ReportRulesDialog.this);
        fireRuleTypeChangedEvent(null);
        rebuildRuleList();
    }

    private void rebuildRuleList() {
        ReportManager.RuleEntry[] entries = ReportManager.getSingleton().getRuleEntries();
        DefaultListModel model = new DefaultListModel();

        for (ReportManager.RuleEntry entry : entries) {
            model.addElement(entry);
        }

        jList1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jReportColorPanel = new javax.swing.JPanel();
        jGreyBox = new javax.swing.JCheckBox();
        jBlueBox = new javax.swing.JCheckBox();
        jGreenBox = new javax.swing.JCheckBox();
        jYellowBox = new javax.swing.JCheckBox();
        jRedBox = new javax.swing.JCheckBox();
        jDatePanel = new javax.swing.JPanel();
        jAttackerPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jAttackerTextArea = new javax.swing.JTextArea();
        jDefenderPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jDefenderTextArea = new javax.swing.JTextArea();
        jAllyPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jAllyTextArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRuleSelection = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jRuleSettingsPanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTargetReportSet = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();

        jReportColorPanel.setLayout(new java.awt.GridBagLayout());

        jGreyBox.setText("Grau (Keine Verluste)");
        jGreyBox.setMaximumSize(new java.awt.Dimension(157, 23));
        jGreyBox.setMinimumSize(new java.awt.Dimension(157, 23));
        jGreyBox.setPreferredSize(new java.awt.Dimension(157, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jReportColorPanel.add(jGreyBox, gridBagConstraints);

        jBlueBox.setText("Blau (Spähbericht)");
        jBlueBox.setMaximumSize(new java.awt.Dimension(157, 23));
        jBlueBox.setMinimumSize(new java.awt.Dimension(157, 23));
        jBlueBox.setPreferredSize(new java.awt.Dimension(157, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jReportColorPanel.add(jBlueBox, gridBagConstraints);

        jGreenBox.setText("Grün");
        jGreenBox.setMaximumSize(new java.awt.Dimension(157, 23));
        jGreenBox.setMinimumSize(new java.awt.Dimension(157, 23));
        jGreenBox.setPreferredSize(new java.awt.Dimension(157, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jReportColorPanel.add(jGreenBox, gridBagConstraints);

        jYellowBox.setText("Gelb (Teilweise Verluste)");
        jYellowBox.setMaximumSize(new java.awt.Dimension(157, 23));
        jYellowBox.setMinimumSize(new java.awt.Dimension(157, 23));
        jYellowBox.setPreferredSize(new java.awt.Dimension(157, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jReportColorPanel.add(jYellowBox, gridBagConstraints);

        jRedBox.setText("Rot (Alle Truppen verloren)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jReportColorPanel.add(jRedBox, gridBagConstraints);

        javax.swing.GroupLayout jDatePanelLayout = new javax.swing.GroupLayout(jDatePanel);
        jDatePanel.setLayout(jDatePanelLayout);
        jDatePanelLayout.setHorizontalGroup(
            jDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDatePanelLayout.setVerticalGroup(
            jDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jAttackerPanel.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Angreifer");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAttackerPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mehrere Einträge per ; trennen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAttackerPanel.add(jLabel3, gridBagConstraints);

        jAttackerTextArea.setColumns(20);
        jAttackerTextArea.setRows(5);
        jScrollPane2.setViewportView(jAttackerTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAttackerPanel.add(jScrollPane2, gridBagConstraints);

        jDefenderPanel.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Verteidiger");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jDefenderPanel.add(jLabel4, gridBagConstraints);

        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Mehrere Einträge per ; trennen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jDefenderPanel.add(jLabel5, gridBagConstraints);

        jDefenderTextArea.setColumns(20);
        jDefenderTextArea.setRows(5);
        jScrollPane3.setViewportView(jDefenderTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jDefenderPanel.add(jScrollPane3, gridBagConstraints);

        jAllyPanel.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("Stämme");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAllyPanel.add(jLabel6, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Mehrere Einträge per ; trennen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAllyPanel.add(jLabel7, gridBagConstraints);

        jAllyTextArea.setColumns(20);
        jAllyTextArea.setRows(5);
        jScrollPane4.setViewportView(jAllyTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jAllyPanel.add(jScrollPane4, gridBagConstraints);

        setTitle("Filterregeln für Berichte");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Vorhandene Regeln"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 130));

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jButton1.setText("Löschen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Neue Regel"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jRuleSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Berichtfarbe", "Gesendet von ... bis ...", "Angreifer", "Verteidiger", "Stamm (Angreifer/Verteidiger)", " ", " " }));
        jRuleSelection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fireRuleTypeChangedEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jRuleSelection, gridBagConstraints);

        jLabel1.setText("Art der Regel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jSeparator1, gridBagConstraints);

        jRuleSettingsPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel2.add(jRuleSettingsPanel, gridBagConstraints);

        jButton2.setText("Hinzufügen");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireAddRuleEvent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jButton2, gridBagConstraints);

        jLabel8.setText("...verschieben in Berichtset");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(jLabel8, gridBagConstraints);

        jTargetReportSet.setText("default");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        jPanel2.add(jTargetReportSet, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(jSeparator2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireRuleTypeChangedEvent(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fireRuleTypeChangedEvent
        int idx = jRuleSelection.getSelectedIndex();
        jRuleSettingsPanel.invalidate();
        jRuleSettingsPanel.removeAll();
        switch (idx) {
            case 0:
                jRuleSettingsPanel.add(jReportColorPanel, BorderLayout.CENTER);
                break;
            case 1:
                jRuleSettingsPanel.add(jDatePanel, BorderLayout.CENTER);
                break;
            case 2:
                jRuleSettingsPanel.add(jAttackerPanel, BorderLayout.CENTER);
                break;
            case 3:
                jRuleSettingsPanel.add(jDefenderPanel, BorderLayout.CENTER);
                break;
            case 4:
                jRuleSettingsPanel.add(jAllyPanel, BorderLayout.CENTER);
                break;
        }
        jRuleSettingsPanel.revalidate();
        pack();
    }//GEN-LAST:event_fireRuleTypeChangedEvent

    private void fireAddRuleEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireAddRuleEvent

        Component c = jRuleSettingsPanel.getComponent(0);
        String targetReportSet = jTargetReportSet.getText();
        if (targetReportSet == null || targetReportSet.length() == 0) {
            return;
        }
        if (c == jReportColorPanel) {
            ReportManager.getSingleton().addRule(createRule(ColorFilter.class), targetReportSet);
        } else if (c == jDatePanel) {
            ReportManager.getSingleton().addRule(createRule(DateFilter.class), targetReportSet);
        } else if (c == jAttackerPanel) {
            ReportManager.getSingleton().addRule(createRule(AttackerFilter.class), targetReportSet);
        } else if (c == jDefenderPanel) {
            ReportManager.getSingleton().addRule(createRule(DefenderFilter.class), targetReportSet);
        } else if (c == jAllyPanel) {
            ReportManager.getSingleton().addRule(createRule(AllyFilter.class), targetReportSet);
        }

        rebuildRuleList();
    }//GEN-LAST:event_fireAddRuleEvent

    public ReportFilterInterface createRule(Class pRuleClass) {
        ReportFilterInterface result = null;
        if (ColorFilter.class.equals(pRuleClass)) {
            ColorFilter f = new ColorFilter();
            int value = 0;
            value += (jGreyBox.isSelected()) ? ColorFilter.GREY : 0;
            value += (jBlueBox.isSelected()) ? ColorFilter.BLUE : 0;
            value += (jGreenBox.isSelected()) ? ColorFilter.GREEN : 0;
            value += (jYellowBox.isSelected()) ? ColorFilter.YELLOW : 0;
            value += (jRedBox.isSelected()) ? ColorFilter.RED : 0;
            f.setup(value);
            result = f;
        } else if (DateFilter.class.equals(pRuleClass)) {
            DateFilter f = new DateFilter();
            //f.setup(jAttackerTextArea.getText());
            result = f;
        } else if (AttackerFilter.class.equals(pRuleClass)) {
            AttackerFilter f = new AttackerFilter();
            f.setup(jAttackerTextArea.getText());
            result = f;
        } else if (DefenderFilter.class.equals(pRuleClass)) {
            DefenderFilter f = new DefenderFilter();
            f.setup(jDefenderTextArea.getText());
            result = f;
        } else if (AllyFilter.class.equals(pRuleClass)) {
            AllyFilter f = new AllyFilter();
            f.setup(jAllyTextArea.getText());
            result = f;
        }

        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportRulesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportRulesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportRulesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportRulesDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Logger.getRootLogger().addAppender(new ConsoleAppender(new org.apache.log4j.PatternLayout("%d - %-5p - %-20c (%C [%L]) - %m%n")));


        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ReportRulesDialog dialog = new ReportRulesDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jAllyPanel;
    private javax.swing.JTextArea jAllyTextArea;
    private javax.swing.JPanel jAttackerPanel;
    private javax.swing.JTextArea jAttackerTextArea;
    private javax.swing.JCheckBox jBlueBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jDatePanel;
    private javax.swing.JPanel jDefenderPanel;
    private javax.swing.JTextArea jDefenderTextArea;
    private javax.swing.JCheckBox jGreenBox;
    private javax.swing.JCheckBox jGreyBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox jRedBox;
    private javax.swing.JPanel jReportColorPanel;
    private javax.swing.JComboBox jRuleSelection;
    private javax.swing.JPanel jRuleSettingsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTargetReportSet;
    private javax.swing.JCheckBox jYellowBox;
    // End of variables declaration//GEN-END:variables
}
