/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DSWorkbenchSupportCoordinator.java
 *
 * Created on Apr 6, 2010, 11:20:16 PM
 */
package de.tor.tribes.ui.views;

import de.tor.tribes.types.Village;
import de.tor.tribes.ui.AbstractDSWorkbenchFrame;
import de.tor.tribes.ui.tree.NodeCellRenderer;
import de.tor.tribes.ui.tree.SelectionTreeRootNode;
import de.tor.tribes.ui.tree.VillageNode;
import de.tor.tribes.util.algo.OptexWrapper;
import java.awt.Point;
import java.awt.Rectangle;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Torridity
 */
public class DSWorkbenchSupportCoordinator extends AbstractDSWorkbenchFrame {

    private static DSWorkbenchSupportCoordinator SINGLETON = null;

    public static synchronized DSWorkbenchSupportCoordinator getSingleton() {
        if (SINGLETON == null) {
            SINGLETON = new DSWorkbenchSupportCoordinator();
        }
        return SINGLETON;
    }

    /** Creates new form DSWorkbenchSupportCoordinator */
    DSWorkbenchSupportCoordinator() {
        initComponents();
        resetView();
        pack();
    }

    public void resetView() {
        jSourceList.setModel(new DefaultListModel());
        jTargetList.setModel(new DefaultListModel());
        SelectionTreeRootNode root = new SelectionTreeRootNode("Unterstützungen");
        jSupportTree.setModel(new DefaultTreeModel(root));
        jSupportTree.setCellRenderer(new NodeCellRenderer());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSourceList = new javax.swing.JList();
        jMaxSplitCount = new javax.swing.JSlider();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTargetList = new javax.swing.JList();
        jMaxSupports = new javax.swing.JSlider();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jSupportTree = new javax.swing.JTree();
        jTaskPane1 = new com.l2fprod.common.swing.JTaskPane();
        jTaskPaneGroup1 = new com.l2fprod.common.swing.JTaskPaneGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(239, 235, 223));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setText("Herkunftsdörfer");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel1);

        jScrollPane1.setViewportView(jSourceList);

        jPanel2.add(jScrollPane1);

        jMaxSplitCount.setForeground(new java.awt.Color(0, 0, 0));
        jMaxSplitCount.setMajorTickSpacing(1);
        jMaxSplitCount.setMaximum(10);
        jMaxSplitCount.setMinimum(1);
        jMaxSplitCount.setMinorTickSpacing(1);
        jMaxSplitCount.setPaintLabels(true);
        jMaxSplitCount.setPaintTicks(true);
        jMaxSplitCount.setSnapToTicks(true);
        jMaxSplitCount.setToolTipText("Anzahl der Unterteilungen der Truppen im Dorf");
        jMaxSplitCount.setValue(3);
        jMaxSplitCount.setOpaque(false);
        jMaxSplitCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fireUpdateSupportEvent(evt);
            }
        });
        jPanel2.add(jMaxSplitCount);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jLabel2.setText("Zieldörfer");
        jPanel3.add(jLabel2);

        jScrollPane2.setViewportView(jTargetList);

        jPanel3.add(jScrollPane2);

        jMaxSupports.setForeground(new java.awt.Color(0, 0, 0));
        jMaxSupports.setMajorTickSpacing(1);
        jMaxSupports.setMaximum(10);
        jMaxSupports.setMinimum(1);
        jMaxSupports.setMinorTickSpacing(1);
        jMaxSupports.setPaintLabels(true);
        jMaxSupports.setPaintTicks(true);
        jMaxSupports.setSnapToTicks(true);
        jMaxSupports.setToolTipText("Max. Anzahl der Unterstützungen");
        jMaxSupports.setValue(5);
        jMaxSupports.setOpaque(false);
        jMaxSupports.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fireUpdateSupportEvent(evt);
            }
        });
        jPanel3.add(jMaxSupports);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jLabel3.setText("Unterstützungen");
        jPanel4.add(jLabel3);

        jScrollPane3.setViewportView(jSupportTree);

        jPanel4.add(jScrollPane3);

        jTaskPane1.setBackground(new java.awt.Color(239, 235, 223));
        com.l2fprod.common.swing.PercentLayout percentLayout1 = new com.l2fprod.common.swing.PercentLayout();
        percentLayout1.setGap(14);
        percentLayout1.setOrientation(1);
        jTaskPane1.setLayout(percentLayout1);

        jTaskPaneGroup1.setTitle("Übertragen");
        com.l2fprod.common.swing.PercentLayout percentLayout2 = new com.l2fprod.common.swing.PercentLayout();
        percentLayout2.setGap(2);
        percentLayout2.setOrientation(1);
        jTaskPaneGroup1.getContentPane().setLayout(percentLayout2);

        jButton1.setBackground(new java.awt.Color(239, 235, 223));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/att_clipboardBB.png"))); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(59, 33));
        jButton1.setMinimumSize(new java.awt.Dimension(59, 33));
        jButton1.setPreferredSize(new java.awt.Dimension(59, 33));
        jTaskPaneGroup1.getContentPane().add(jButton1);

        jButton2.setBackground(new java.awt.Color(239, 235, 223));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/att_browser.png"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(59, 33));
        jButton2.setMinimumSize(new java.awt.Dimension(59, 33));
        jButton2.setPreferredSize(new java.awt.Dimension(59, 33));
        jTaskPaneGroup1.getContentPane().add(jButton2);

        jButton3.setBackground(new java.awt.Color(239, 235, 223));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/att_HTML.png"))); // NOI18N
        jButton3.setMaximumSize(new java.awt.Dimension(59, 33));
        jButton3.setMinimumSize(new java.awt.Dimension(59, 33));
        jButton3.setPreferredSize(new java.awt.Dimension(59, 33));
        jTaskPaneGroup1.getContentPane().add(jButton3);

        jTaskPane1.add(jTaskPaneGroup1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTaskPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                    .addComponent(jTaskPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fireUpdateSupportEvent(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fireUpdateSupportEvent
        updateSupports();
    }//GEN-LAST:event_fireUpdateSupportEvent

    @Override
    public void fireVillagesDraggedEvent(List<Village> pVillages, Point pDropLocation) {
        Rectangle bounds = jSourceList.getBounds();
        Point locationOnScreen = getLocationOnScreen();
        bounds.setLocation(jSourceList.getLocationOnScreen());
        pDropLocation.move(locationOnScreen.x + pDropLocation.x, locationOnScreen.y + pDropLocation.y);

        if (bounds.contains(pDropLocation)) {
            DefaultListModel model = (DefaultListModel) jSourceList.getModel();
            for (Village v : pVillages) {
                if (!model.contains(v)) {
                    model.addElement(v);
                }
            }

        } else {
            bounds = jTargetList.getBounds();
            //pDropLocation.move(pDropLocation.x - locationOnScreen.x, pDropLocation.y - locationOnScreen.y);
            bounds.setLocation(jTargetList.getLocationOnScreen());
            // pDropLocation.move(locationOnScreen.x + pDropLocation.x, locationOnScreen.y + pDropLocation.y);
            if (bounds.contains(pDropLocation)) {
                DefaultListModel model = (DefaultListModel) jTargetList.getModel();
                for (Village v : pVillages) {
                    if (!model.contains(v)) {
                        model.addElement(v);
                    }
                }
            }
        }
        updateSupports();
    }

    private void updateSupports() {
        SelectionTreeRootNode root = new SelectionTreeRootNode("Unterstützung");
        List<Village> sources = new LinkedList<Village>();
        List<Village> targets = new LinkedList<Village>();

        DefaultListModel model = ((DefaultListModel) jSourceList.getModel());
        for (int i = 0; i < model.size(); i++) {
            sources.add((Village) model.get(i));
        }
        model = ((DefaultListModel) jTargetList.getModel());
        for (int i = 0; i < model.size(); i++) {
            targets.add((Village) model.get(i));
        }
        if (sources.isEmpty() || targets.isEmpty()) {
            //nothing to do
            return;
        }
        OptexWrapper w = new OptexWrapper();
        Hashtable<Village, List<Village>> result = w.calculateSupports(sources, targets, jMaxSplitCount.getValue(), jMaxSupports.getValue());
        // System.out.println(result);
        Enumeration<Village> sourceKeys = result.keys();
        while (sourceKeys.hasMoreElements()) {
            Village source = sourceKeys.nextElement();
            List<Village> supportTargets = result.get(source);
            VillageNode sourceNode = new VillageNode(source);
            for (Village v : supportTargets) {
                sourceNode.add(new VillageNode(v));
            }
            root.add(sourceNode);
        }

        jSupportTree.setModel(new DefaultTreeModel(root));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider jMaxSplitCount;
    private javax.swing.JSlider jMaxSupports;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList jSourceList;
    private javax.swing.JTree jSupportTree;
    private javax.swing.JList jTargetList;
    private com.l2fprod.common.swing.JTaskPane jTaskPane1;
    private com.l2fprod.common.swing.JTaskPaneGroup jTaskPaneGroup1;
    // End of variables declaration//GEN-END:variables
}
