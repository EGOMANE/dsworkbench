/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TagMapMarkerEditorImpl.java
 *
 * Created on 08.07.2009, 15:34:35
 */
package de.tor.tribes.ui.editors;

import de.tor.tribes.ui.ImageManager;
import java.awt.Color;
import java.awt.Component;
import java.awt.image.BufferedImage;
import javax.swing.DefaultListCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import net.java.dev.colorchooser.ColorChooser;

/**
 *
 * @author Jejkal
 */
public class TagMapMarkerEditorImpl extends javax.swing.JPanel {

    private ColorChooser c = null;

    /** Creates new form TagMapMarkerEditorImpl */
    public TagMapMarkerEditorImpl() {
        initComponents();
        c = new ColorChooser();
        add(c);

        //setup note symbol box
        for (int i = 0; i <= ImageManager.ICON_SNOB; i++) {
            jComboBox1.addItem(i);
        }

        ListCellRenderer rSymbol = new ListCellRenderer() {

            @Override
            public Component getListCellRendererComponent( JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                Component c = new DefaultListCellRenderer().getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                try {
                    JLabel label = ((JLabel) c);
                    label.setText("");
                    BufferedImage symbol = ImageManager.getNoteSymbol((Integer) value);
                    label.setIcon(new ImageIcon(symbol.getScaledInstance(18, 18, BufferedImage.SCALE_FAST)));
                } catch (Exception e) {
                }
                return c;
            }
        };
        jComboBox1.setRenderer(rSymbol);
    }

    public void setColor(Color pColor) {
        if (pColor != null) {
            c.setColor(pColor);
        }
    }

    public Color getColor() {
        return c.getColor();
    }

    public void setIcon(int pIcon) {
        jComboBox1.setSelectedIndex(pIcon);
    }

    public int getIcon() {
        return jComboBox1.getSelectedIndex();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();

        setLayout(new java.awt.GridLayout(1, 2, 1, 0));

        add(jComboBox1);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
