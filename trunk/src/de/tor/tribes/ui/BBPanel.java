/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BBPanel.java
 *
 * Created on Feb 17, 2011, 10:48:36 PM
 */
package de.tor.tribes.ui;

import java.util.StringTokenizer;
import javax.swing.JFrame;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author Torridity
 */
public class BBPanel extends javax.swing.JPanel {

    private String sBuffer = "";

    /** Creates new form BBPanel */
    public BBPanel() {
        initComponents();
        //((HTMLEditorKit) jTextPane1.getEditorKit()).setLinkCursor(new Cursor(Cursor.HAND_CURSOR));

        jTextPane1.addHyperlinkListener(new HyperlinkListener() {

            @Override
            public void hyperlinkUpdate(HyperlinkEvent e) {
                System.out.println(e.getURL());
                System.out.println(e.getDescription());
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jToggleButton1 = new javax.swing.JToggleButton();

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jToggleButton1.setText("Edit");
        jToggleButton1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fireStateChangeEvent(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToggleButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fireStateChangeEvent(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fireStateChangeEvent
        setEditMode(jToggleButton1.isSelected());
    }//GEN-LAST:event_fireStateChangeEvent

    private void setEditMode(boolean pToEditMode) {
        if (pToEditMode) {
            jTextPane1.setContentType("text/plain");
            jTextPane1.setText(sBuffer);
        } else {
            sBuffer = jTextPane1.getText();
            buildFormattedCode();
        }
        jTextPane1.setEditable(pToEditMode);
    }

    private void buildFormattedCode() {
        jTextPane1.setContentType("text/html");
        StringTokenizer t = new StringTokenizer(sBuffer, " \t");
        StringBuilder b = new StringBuilder();
        b.append("<html><body>");
        while (t.hasMoreTokens()) {
            String token = t.nextToken();
            if (token.matches("\\[coord\\]\\(*[0-9]{1,3}\\|[0-9]{1,3}\\)*\\[/coord\\]")) {
                String coords = token.replaceAll("\\[coord\\]", "").replaceAll("\\[/coord\\]", "");
                b.append(" <a href='#").append(coords).append("'>").append(coords).append("</a>");
            } else if (token.matches("\\[tribe\\].{3,}\\[/tribe\\]")) {
                String tribe = token.replaceAll("\\[tribe\\]", "").replaceAll("\\[/tribe\\]", "");
                b.append(" <a href='##").append(tribe).append("'>").append(tribe).append("</a>");
            } else if (token.matches("\\[ally\\].{3,}\\[/ally\\]")) {
                String ally = token.replaceAll("\\[ally\\]", "").replaceAll("\\[/ally\\]", "");
                b.append(" <a href='###").append(ally).append("'>").append(ally).append("</a>");
            } else {
                b.append(" ").append(token);
            }

        }
        b.append("</body></html>");
        jTextPane1.setText(b.toString());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.add(new BBPanel());
        f.setVisible(true);

    }
}
