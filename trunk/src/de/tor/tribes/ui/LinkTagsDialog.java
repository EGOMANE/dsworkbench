/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LinkTagDialog.java
 *
 * Created on Jan 14, 2011, 10:11:11 PM
 */
package de.tor.tribes.ui;

import de.tor.tribes.types.LinkedTag;
import de.tor.tribes.types.Tag;
import de.tor.tribes.ui.editors.LinkGroupColorCellEditor;
import de.tor.tribes.ui.models.TagLinkMatrixModel;
import de.tor.tribes.ui.renderer.AlternatingColorCellRenderer;
import de.tor.tribes.ui.renderer.MultiColorCellRenderer;
import de.tor.tribes.ui.renderer.SortableTableHeaderRenderer;
import de.tor.tribes.util.JOptionPaneHelper;
import de.tor.tribes.util.tag.TagManager;
import java.awt.Color;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Torridity
 */
public class LinkTagsDialog extends javax.swing.JDialog {

    private boolean bCreateLinkedTag = false;
    private List<Tag> tags = null;

    /** Creates new form LinkTagDialog */
    public LinkTagsDialog( java.awt.Frame parent, boolean modal ) {
	super(parent, modal);
	initComponents();
	tags = new LinkedList<Tag>();
	tags.add(new Tag("Off", true));
	tags.add(new Tag("Def", true));
	tags.add(new Tag("Off_F", true));
	tags.add(new Tag("Off_A", true));
	tags.add(new Tag("Off_R", true));
	tags.add(new Tag("Deff_A", true));
	tags.add(new Tag("Deff_R", true));
    }

    public LinkedTag setupAndShow() {
	jTable1.setModel(new TagLinkMatrixModel());
	jTable1.setDefaultRenderer(Integer.class, new MultiColorCellRenderer());
	jTable1.setDefaultRenderer(Tag.class, new AlternatingColorCellRenderer());
	jTable1.setDefaultEditor(Integer.class, new LinkGroupColorCellEditor());
	jTable1.setRowHeight(21);
	for ( int i = 0; i < jTable1.getColumnCount(); i++ ) {
	    jTable1.getColumn(jTable1.getColumnName(i)).setHeaderRenderer(new SortableTableHeaderRenderer());
	}

	setVisible(true);

	if ( bCreateLinkedTag ) {
	    LinkedTag t = new LinkedTag(jTagName.getText(), true);
	    String equation = ((TagLinkMatrixModel) jTable1.getModel()).getEquation();
	    equation = equation.replaceAll("UND", "&&");
	    equation = equation.replaceAll("ODER", "||");
	    t.setEquation(equation);
	    t.updateVillageList();
	    return t;
	}
	return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDoCreateButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTagName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tags verkn端pfen");
        setAlwaysOnTop(true);

        jPanel1.setBackground(new java.awt.Color(239, 235, 223));

        jDoCreateButton.setText("Erstellen");
        jDoCreateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireAcceptEvent(evt);
            }
        });

        jButton2.setText("Abbrechen");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireAcceptEvent(evt);
            }
        });

        jLabel1.setText("Tag Name");

        jTagName.setMinimumSize(new java.awt.Dimension(100, 20));
        jTagName.setPreferredSize(new java.awt.Dimension(100, 20));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/information.png"))); // NOI18N
        jButton1.setText("Verkn端pfung als Klartext");
        jButton1.setToolTipText("Zeigt die resultierende Verkn端pfung in Textform mit farblicher Abgrenzung");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireShowLinkInPlainTextEvent(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 293, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDoCreateButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDoCreateButton)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireAcceptEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireAcceptEvent
        if ( evt.getSource() == jDoCreateButton ) {
	    System.out.println(((TagLinkMatrixModel) jTable1.getModel()).getEquation());
	    if ( jTagName.getText().length() < 1 ) {
		JOptionPaneHelper.showWarningBox(this, "Du musst einen Namen f端r den neuen Tag angeben.", "Warnung");
		return;
	    }
	    if ( jTagName.getText().equals("ODER") || jTagName.getText().equals("UND") ) {
		JOptionPaneHelper.showWarningBox(this, "Folgende Begriffe sind als Tag Namen gesperrt: UND, ODER\nGib bitte einen anderen Namen an.", "Warnung");
		return;
	    }

	    String equation = ((TagLinkMatrixModel) jTable1.getModel()).getEquation();
	    Tag[] pTags = TagManager.getSingleton().getTags().toArray(new Tag[]{});
	    Arrays.sort(pTags, Tag.SIZE_ORDER);

	    for ( Tag t : pTags ) {
		//for (Tag t : pTags) {
		equation = equation.replaceAll(Pattern.quote(t.getName()), "true");
	    }

	    for ( int i = 0; i < 99; i++ ) {
		equation = equation.replaceAll(Pattern.quote("K" + ((i < 10) ? "0" : "") + i), "true");
	    }

	    equation = equation.replaceAll("UND", "&&");
	    equation = equation.replaceAll("ODER", "||");
	    ScriptEngineManager factory = new ScriptEngineManager();
	    // create a JavaScript engine
	    ScriptEngine engine = factory.getEngineByName("JavaScript");
	    // evaluate JavaScript code from String
	    try {
		engine.eval("var b = eval(\"" + equation + "\")");
	    } catch ( Exception e ) {
		JOptionPaneHelper.showWarningBox(this, "Die angegebene Verkn端pfung scheint fehlerhaft zu sein.\nBitte 端berpr端fe sie noch einmal.", "Warnung");
		return;
	    }

	    bCreateLinkedTag = true;
	}
	dispose();
    }//GEN-LAST:event_fireAcceptEvent

    private void fireShowLinkInPlainTextEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireShowLinkInPlainTextEvent
        String equation = ((TagLinkMatrixModel) jTable1.getModel()).getEquationAsHtml();
	JOptionPaneHelper.showInformationBox(this, "<html>Der verkn端pfte Tag mit dem Namen '" + jTagName.getText() + "' befindet sich<BR/> " + equation + "</html>", "Verkn端pfung");
    }//GEN-LAST:event_fireShowLinkInPlainTextEvent

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
	java.awt.EventQueue.invokeLater(new Runnable() {

	    public void run() {
		LinkTagsDialog dialog = new LinkTagsDialog(new javax.swing.JFrame(), true);
		dialog.addWindowListener(new java.awt.event.WindowAdapter() {

		    public void windowClosing( java.awt.event.WindowEvent e ) {
			System.exit(0);
		    }

		});
		dialog.setupAndShow();
	    }

	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jDoCreateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTagName;
    // End of variables declaration//GEN-END:variables
}
