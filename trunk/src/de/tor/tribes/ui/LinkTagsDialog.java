/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LinkTagDialog.java
 *
 * Created on Jan 14, 2011, 10:11:11 PM
 */
package de.tor.tribes.ui;

import de.tor.tribes.types.LinkedTag;
import de.tor.tribes.types.Tag;
import de.tor.tribes.ui.editors.LinkGroupColorCellEditor;
import de.tor.tribes.ui.models.TagLinkMatrixModel;
import de.tor.tribes.ui.renderer.AlternatingColorCellRenderer;
import de.tor.tribes.ui.renderer.ColorCellRenderer;
import de.tor.tribes.ui.renderer.SortableTableHeaderRenderer;
import de.tor.tribes.util.JOptionPaneHelper;
import de.tor.tribes.util.tag.TagManager;
import java.awt.Color;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Torridity
 */
public class LinkTagsDialog extends javax.swing.JDialog {

    private boolean bCreateLinkedTag = false;
    private List<Tag> tags = null;

    /** Creates new form LinkTagDialog */
    public LinkTagsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tags = new LinkedList<Tag>();
        tags.add(new Tag("Off", true));
        tags.add(new Tag("Def", true));
        tags.add(new Tag("Off_F", true));
        tags.add(new Tag("Off_A", true));
        tags.add(new Tag("Off_R", true));
        tags.add(new Tag("Deff_A", true));
        tags.add(new Tag("Deff_R", true));
        jRelationBox.setSelectedIndex(0);
    }

    public LinkedTag setupAndShow() {
        DefaultComboBoxModel tagModel = new DefaultComboBoxModel();
        for (Tag t : TagManager.getSingleton().getTags()) {
            // for (Tag t : tags) {
            tagModel.addElement(t);
        }
        jTagBox.setModel(tagModel);

        jTable1.setModel(new TagLinkMatrixModel());
        jTable1.setDefaultRenderer(Color.class, new ColorCellRenderer(false));
        jTable1.setDefaultRenderer(Tag.class, new AlternatingColorCellRenderer());
        jTable1.setDefaultEditor(Color.class, new LinkGroupColorCellEditor());

        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumn(jTable1.getColumnName(i)).setHeaderRenderer(new SortableTableHeaderRenderer());
        }

        setVisible(true);

        if (bCreateLinkedTag) {
            LinkedTag t = new LinkedTag(jTagName.getText(), true);
            String equation = jEquationField.getText();
            equation = equation.replaceAll("UND", "&&");
            equation = equation.replaceAll("ODER", "||");
            equation = equation.replaceAll("NICHT", "!");
            t.setEquation(equation);
            t.updateVillageList();
            return t;
        }
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jDoCreateButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTagName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jBracketOpenBox = new javax.swing.JComboBox();
        jNotBox = new javax.swing.JComboBox();
        jTagBox = new javax.swing.JComboBox();
        jBracketCloseBox = new javax.swing.JComboBox();
        jRelationBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jEquationField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tags verknüpfen");
        setAlwaysOnTop(true);
        setModal(true);

        jPanel1.setBackground(new java.awt.Color(239, 235, 223));

        jDoCreateButton.setText("Erstellen");
        jDoCreateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireAcceptEvent(evt);
            }
        });

        jButton2.setText("Abbrechen");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireAcceptEvent(evt);
            }
        });

        jLabel1.setText("Tag Name");

        jTagName.setMinimumSize(new java.awt.Dimension(100, 20));
        jTagName.setPreferredSize(new java.awt.Dimension(100, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Verknüpfung"));
        jPanel2.setOpaque(false);

        jBracketOpenBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "(", " " }));
        jBracketOpenBox.setSelectedIndex(1);
        jBracketOpenBox.setMinimumSize(new java.awt.Dimension(40, 22));
        jBracketOpenBox.setPreferredSize(new java.awt.Dimension(40, 22));

        jNotBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nicht", " " }));
        jNotBox.setSelectedIndex(1);

        jTagBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jBracketCloseBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ")", " " }));
        jBracketCloseBox.setSelectedIndex(1);
        jBracketCloseBox.setMinimumSize(new java.awt.Dimension(40, 22));
        jBracketCloseBox.setPreferredSize(new java.awt.Dimension(40, 22));

        jRelationBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UND", "ODER", " " }));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/add.gif"))); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(22, 22));
        jButton1.setMinimumSize(new java.awt.Dimension(22, 22));
        jButton1.setPreferredSize(new java.awt.Dimension(22, 22));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireInsertRelationEvent(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEquationField, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBracketOpenBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jNotBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTagBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBracketCloseBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRelationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBracketOpenBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTagBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNotBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBracketCloseBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRelationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jEquationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDoCreateButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDoCreateButton)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireAcceptEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireAcceptEvent
        if (evt.getSource() == jDoCreateButton) {
            System.out.println(((TagLinkMatrixModel) jTable1.getModel()).getEquation());
            if (jTagName.getText().length() < 1) {
                JOptionPaneHelper.showWarningBox(this, "Du musst einen Namen für den neuen Tag angeben.", "Warnung");
                return;
            }
            if (jTagName.getText().equals("NICHT") || jTagName.getText().equals("ODER") || jTagName.getText().equals("UND")) {
                JOptionPaneHelper.showWarningBox(this, "Folgende Begriffe sind als Tag Namen gesperrt: UND, ODER, NICHT\nGib bitte einen anderen Namen an.", "Warnung");
                return;
            }

            String equation = jEquationField.getText();
            Tag[] pTags = TagManager.getSingleton().getTags().toArray(new Tag[]{});
            //Tag[] pTags = tags.toArray(new Tag[]{});
            Arrays.sort(pTags, Tag.SIZE_ORDER);

            for (Tag t : pTags) {
                //for (Tag t : pTags) {
                if (t.getName().equals("NICHT") || t.getName().equals("ODER") || t.getName().equals("UND")) {
                    JOptionPaneHelper.showWarningBox(this, "Folgende Begriffe sind als Tag Namen gesperrt: UND, ODER, NICHT\nDaher ist eine Verknüpfung nicht möglich.", "Warnung");
                    return;
                }
                equation = equation.replaceAll(Pattern.quote(t.getName()), "true");
            }

            equation = equation.replaceAll("UND", "&&");
            equation = equation.replaceAll("ODER", "||");
            equation = equation.replaceAll("NICHT", "!");
            ScriptEngineManager factory = new ScriptEngineManager();
            // create a JavaScript engine
            ScriptEngine engine = factory.getEngineByName("JavaScript");
            // evaluate JavaScript code from String
            try {
                engine.eval("var b = eval(\"" + equation + "\")");
            } catch (Exception e) {
                JOptionPaneHelper.showWarningBox(this, "Die angegebene Verknüpfung scheint fehlerhaft zu sein.\nBitte überprüfe sie noch einmal.", "Warnung");
                return;
            }

            bCreateLinkedTag = true;
        }
        dispose();
    }//GEN-LAST:event_fireAcceptEvent

    private void fireInsertRelationEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireInsertRelationEvent
        StringBuilder newPart = new StringBuilder();
        if (jBracketOpenBox.getSelectedIndex() == 0) {
            newPart.append(" ( ");
        }

        if (jNotBox.getSelectedIndex() == 0) {
            newPart.append(" NICHT ");
        }
        Tag t = (Tag) jTagBox.getSelectedItem();
        newPart.append(t.getName());
        if (jBracketCloseBox.getSelectedIndex() == 0) {
            newPart.append(" ) ");
        }
        switch (jRelationBox.getSelectedIndex()) {
            case 0:
                newPart.append(" UND ");
                break;
            case 1:
                newPart.append(" ODER ");
                break;
        }
        jEquationField.setText(jEquationField.getText() + newPart.toString());


    }//GEN-LAST:event_fireInsertRelationEvent

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                LinkTagsDialog dialog = new LinkTagsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setupAndShow();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jBracketCloseBox;
    private javax.swing.JComboBox jBracketOpenBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jDoCreateButton;
    private javax.swing.JTextField jEquationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox jNotBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox jRelationBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox jTagBox;
    private javax.swing.JTextField jTagName;
    // End of variables declaration//GEN-END:variables
}
