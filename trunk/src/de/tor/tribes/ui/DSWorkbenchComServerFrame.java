/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DSWorkbenchComServerFrame.java
 *
 * Created on 01.03.2009, 17:08:29
 */
package de.tor.tribes.ui;

import de.tor.tribes.net.PeerManager;
import de.tor.tribes.net.PeerManagerListener;
import de.tor.tribes.util.Constants;
import java.awt.Color;
import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *@TODO Put perm bans to global options
 * @author Charon
 */
public class DSWorkbenchComServerFrame extends AbstractDSWorkbenchFrame implements PeerManagerListener {

    private PeerManager mManager = null;

    /** Creates new form DSWorkbenchComServerFrame */
    public DSWorkbenchComServerFrame() {
        initComponents();
        jBanFrame.pack();
        jBanFrame.getContentPane().setBackground(Constants.DS_BACK);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBanFrame = new javax.swing.JFrame();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jBanList = new javax.swing.JList();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jServerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jServerPort = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jOutputPane = new javax.swing.JTextPane();
        jStopButton = new javax.swing.JButton();
        jStartButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jUserList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jBanFrame.setTitle("Gebannte Spieler");
        jBanFrame.setAlwaysOnTop(true);

        jButton5.setBackground(new java.awt.Color(239, 235, 223));
        jButton5.setText("Permanent");
        jButton5.setToolTipText("Den gewählten Spieler permanent bannen");

        jButton4.setBackground(new java.awt.Color(239, 235, 223));
        jButton4.setText("Ban aufheben");
        jButton4.setToolTipText("Den gewählten Spieler nicht mehr bannen");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireCancelBanEvent(evt);
            }
        });

        jBanList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jBanList);

        jButton6.setBackground(new java.awt.Color(239, 235, 223));
        jButton6.setText("Schließen");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireCloseBanListEvent(evt);
            }
        });

        javax.swing.GroupLayout jBanFrameLayout = new javax.swing.GroupLayout(jBanFrame.getContentPane());
        jBanFrame.getContentPane().setLayout(jBanFrameLayout);
        jBanFrameLayout.setHorizontalGroup(
            jBanFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBanFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBanFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jBanFrameLayout.setVerticalGroup(
            jBanFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBanFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBanFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addGroup(jBanFrameLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(jButton6)))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");
        setAlwaysOnTop(true);

        jLabel1.setText("Servername");

        jLabel2.setText("Serverport");

        jServerPort.setText("6666");
        jServerPort.setMaximumSize(new java.awt.Dimension(80, 20));
        jServerPort.setMinimumSize(new java.awt.Dimension(80, 20));
        jServerPort.setPreferredSize(new java.awt.Dimension(80, 20));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(128, 64, 0), 2), "Serverausgabe"));
        jPanel1.setOpaque(false);

        jScrollPane1.setAutoscrolls(true);

        jOutputPane.setEditable(false);
        jScrollPane1.setViewportView(jOutputPane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        jStopButton.setText("Stoppen");
        jStopButton.setToolTipText("Beendet den Server");
        jStopButton.setEnabled(false);
        jStopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireStopServerEvent(evt);
            }
        });

        jStartButton.setText("Starten");
        jStartButton.setToolTipText("Startet einen Server");
        jStartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireStartServerEvent(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(128, 64, 0), 2), "Nutzer"));
        jPanel2.setOpaque(false);

        jUserList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jUserList.setToolTipText("Aktuell verbundene Spieler");
        jScrollPane2.setViewportView(jUserList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/remove.gif"))); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(25, 25));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireKickEvent(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/forbidden.gif"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton2.setPreferredSize(new java.awt.Dimension(25, 25));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireBanEvent(evt);
            }
        });

        jButton3.setText("Bans");
        jButton3.setToolTipText("Liste der gebannten Spieler anzeigen");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireShowBanDialogEvent(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addComponent(jStartButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jStopButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jServerName, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jServerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jStopButton)
                    .addComponent(jStartButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireStartServerEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireStartServerEvent
        if (!jStartButton.isEnabled()) {
            return;
        }
        String name = jServerName.getText();

        try {
            int port = Integer.parseInt(jServerPort.getText());
            mManager = new PeerManager(port);
            mManager.addPeerManagerListener(this);
            jStartButton.setEnabled(false);
            jStopButton.setEnabled(true);
            try {
                DefaultStyledDocument doc = (DefaultStyledDocument) jOutputPane.getDocument();
                SimpleAttributeSet att = new SimpleAttributeSet();
                StyleConstants.setForeground(att, Color.GREEN);
                jOutputPane.setCaretPosition(doc.getLength());
                doc.insertString(doc.getLength(), "Server wurde gestartet\n", att);
            } catch (Exception e) {
            }
        } catch (Exception e) {
            try {
                DefaultStyledDocument doc = (DefaultStyledDocument) jOutputPane.getDocument();
                SimpleAttributeSet att = new SimpleAttributeSet();
                StyleConstants.setForeground(att, Color.RED);
                jOutputPane.setCaretPosition(doc.getLength());
                doc.insertString(doc.getLength(), "Server konnte nicht gestartet werden\n", att);
            } catch (Exception inner) {
            }
        }

    }//GEN-LAST:event_fireStartServerEvent

    private void fireStopServerEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireStopServerEvent
        if (!jStopButton.isEnabled()) {
            return;
        }
        mManager.removePeerManagerListener(this);
        mManager.disconnect();
        jStartButton.setEnabled(true);
        jStopButton.setEnabled(false);
        try {
            DefaultStyledDocument doc = (DefaultStyledDocument) jOutputPane.getDocument();
            SimpleAttributeSet att = new SimpleAttributeSet();
            StyleConstants.setForeground(att, Color.RED);
            jOutputPane.setCaretPosition(doc.getLength());
            doc.insertString(doc.getLength(), "Server wurde gestoppt\n", att);
        } catch (Exception inner) {
        }
    }//GEN-LAST:event_fireStopServerEvent

    private void fireKickEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireKickEvent
        String toKick = (String) jUserList.getSelectedValue();
        if (JOptionPane.showConfirmDialog(this, "Nutzer '" + toKick + "' wirklich kicken?", "Bestätigung", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                mManager.kick(toKick);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_fireKickEvent

    private void fireBanEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireBanEvent
        String toBan = (String) jUserList.getSelectedValue();
        if (JOptionPane.showConfirmDialog(this, "Nutzer '" + toBan + "' wirklich bannen?", "Bestätigung", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                mManager.ban(toBan);
            } catch (Exception e) {
            }
        }
        buildBanList();
    }//GEN-LAST:event_fireBanEvent

    private void fireShowBanDialogEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireShowBanDialogEvent
        if (mManager == null) {
            return;
        }
        buildBanList();
        jBanFrame.setVisible(true);
    }//GEN-LAST:event_fireShowBanDialogEvent

    private void buildBanList() {
        String[] bans = mManager.getBans();
        if (bans != null) {
            DefaultListModel model = new DefaultListModel();
            for (String ban : bans) {
                model.addElement(ban);
            }
            jBanList.setModel(model);
        }
    }
    private void fireCancelBanEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireCancelBanEvent
        String toUnban = (String) jBanList.getSelectedValue();
        if (toUnban != null) {
            mManager.removePeerFromBanList(toUnban);
            buildBanList();
            JOptionPane.showMessageDialog(jBanFrame, "Spieler '" + toUnban + "' ist nicht mehr gebannt.", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_fireCancelBanEvent

    private void fireCloseBanListEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireCloseBanListEvent
        jBanFrame.setVisible(false);
    }//GEN-LAST:event_fireCloseBanListEvent

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DSWorkbenchComServerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame jBanFrame;
    private javax.swing.JList jBanList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextPane jOutputPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jServerName;
    private javax.swing.JTextField jServerPort;
    private javax.swing.JButton jStartButton;
    private javax.swing.JButton jStopButton;
    private javax.swing.JList jUserList;
    // End of variables declaration//GEN-END:variables

    @Override
    public void fireJoinEvent(String pUser) {
        try {
            DefaultStyledDocument doc = (DefaultStyledDocument) jOutputPane.getDocument();
            SimpleAttributeSet att = new SimpleAttributeSet();
            StyleConstants.setForeground(att, Color.GREEN);
            jOutputPane.setCaretPosition(doc.getLength());
            doc.insertString(doc.getLength(), pUser + " ist beigetreten\n", att);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void fireUserListEvent(String[] pUsers) {
        DefaultListModel model = new DefaultListModel();
        Arrays.sort(pUsers, String.CASE_INSENSITIVE_ORDER);
        for (String user : pUsers) {
            model.addElement(user);
        }
        jUserList.setModel(model);
    }

    @Override
    public void fireLeaveEvent(String pUser) {
        try {
            DefaultStyledDocument doc = (DefaultStyledDocument) jOutputPane.getDocument();
            SimpleAttributeSet att = new SimpleAttributeSet();
            StyleConstants.setForeground(att, Color.RED);
            jOutputPane.setCaretPosition(doc.getLength());
            doc.insertString(doc.getLength(), pUser + " hat uns verlassen\n", att);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
