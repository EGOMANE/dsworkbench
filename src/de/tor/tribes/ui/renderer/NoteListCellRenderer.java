/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NoteListCellRenderer.java
 *
 * Created on Dec 23, 2010, 12:40:22 AM
 */
package de.tor.tribes.ui.renderer;

import de.tor.tribes.types.Note;
import de.tor.tribes.util.BBCodeFormatter;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.SwingConstants;

/**
 * @author Torridity
 */
public class NoteListCellRenderer extends javax.swing.JPanel implements ListCellRenderer {

    /** Creates new form NoteListCellRenderer */
    public NoteListCellRenderer() {
        initComponents();
    }

    @Override
    public Component getListCellRendererComponent(JList list, Object pValue, int pIndex, boolean pSelected, boolean pHasFocus) {
        try {
            jNoteSymbol.setHorizontalAlignment(SwingConstants.CENTER);
            setOpaque(true);
            if (pSelected) {
                setForeground(list.getSelectionForeground());
                super.setBackground(list.getSelectionBackground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }
            Note n = (Note) pValue;
            jNoteSymbol.setHorizontalAlignment(SwingConstants.CENTER);
            if (n.getNoteSymbol() == -1) {
                jNoteSymbol.setIcon(null);
                jNoteSymbol.setText("-");
            } else {

                ImageIcon symbol = new ImageIcon(de.tor.tribes.ui.ImageManager.getNoteSymbol(n.getNoteSymbol()));
                jNoteSymbol.setIcon(symbol);
                jNoteSymbol.setText("");
            }

            ImageIcon mapIcon = new ImageIcon(de.tor.tribes.ui.ImageManager.getNoteIcon(n.getMapMarker()));
            jMapIcon.setHorizontalAlignment(SwingConstants.CENTER);
            if (mapIcon == null) {
                jMapIcon.setIcon(null);
                jMapIcon.setText("-");
            } else {
                jMapIcon.setIcon(mapIcon);
                jMapIcon.setText("");
            }
            jNoteText.setHorizontalAlignment(SwingConstants.CENTER);
            jNoteText.setText("<html><head>" + BBCodeFormatter.getStyles() + "</head><nobr>" + BBCodeFormatter.toHtml(n.toString()).replaceAll(Pattern.quote("<br/>"), " ") + "<nobr></html>");
        } catch (Exception e) {
            //cast problem
        }

        return this;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMapIcon = new javax.swing.JLabel();
        jNoteSymbol = new javax.swing.JLabel();
        jNoteText = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(132, 32));
        setMinimumSize(new java.awt.Dimension(132, 32));
        setPreferredSize(new java.awt.Dimension(132, 32));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        jMapIcon.setMaximumSize(new java.awt.Dimension(32, 32));
        jMapIcon.setMinimumSize(new java.awt.Dimension(32, 32));
        jMapIcon.setPreferredSize(new java.awt.Dimension(32, 32));
        add(jMapIcon);

        jNoteSymbol.setMaximumSize(new java.awt.Dimension(32, 32));
        jNoteSymbol.setMinimumSize(new java.awt.Dimension(32, 32));
        jNoteSymbol.setPreferredSize(new java.awt.Dimension(32, 32));
        add(jNoteSymbol);

        jNoteText.setText("<html><head><style type='text/css'>.ds_link{ color:#804000;font-weight:700;text-decoration:none}a {color:#603000;text-decoration:none}blockquote {background-color:#FFFFFF;}</style></head><nobr><a href='###424|445' class='ds_link'>Torriditys village (424|445) K44</a>  <a href='#Torridity' class='ds_link'>Torridity</a></nobr></html>");
        jNoteText.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jNoteText.setMinimumSize(new java.awt.Dimension(100, 32));
        jNoteText.setPreferredSize(new java.awt.Dimension(100, 32));
        add(jNoteText);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jMapIcon;
    private javax.swing.JLabel jNoteSymbol;
    private javax.swing.JLabel jNoteText;
    // End of variables declaration//GEN-END:variables
}
