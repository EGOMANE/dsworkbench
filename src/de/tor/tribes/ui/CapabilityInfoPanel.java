/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CapabilityInfoPanel.java
 *
 * Created on Apr 23, 2011, 11:04:01 PM
 */
package de.tor.tribes.ui;

/**
 *
 * @author Torridity
 */
public class CapabilityInfoPanel extends javax.swing.JPanel {

    private boolean searchable = true;
    private boolean copyable = true;
    private boolean pastable = true;
    private boolean deletable = true;

    /** Creates new form CapabilityInfoPanel */
    public CapabilityInfoPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCopy = new javax.swing.JLabel();
        jPaste = new javax.swing.JLabel();
        jDelete = new javax.swing.JLabel();
        jFind = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/document_copy.png"))); // NOI18N
        jCopy.setToolTipText("<html><b>Kopieren/Ausschneiden von Eintr&auml;gen per STRG+C bzw. STRG+X</b><br/>In einigen Ansichten werden Eintr&auml;ge so kopiert,<br/>dass sie in genau diese Ansicht wieder eingef&uuml;gt werden k&ouml;nnen.<br/>\nIn anderen Ansichten werden Dorfkoordinaten kopiert,<br/>die an verschiedenen anderen Stellen aus der Zwischenablage gelesen werden k&ouml;nnen</html>");
        add(jCopy);

        jPaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/clipboard_empty.png"))); // NOI18N
        jPaste.setToolTipText("<html><b>Einf&uuml;gen von Eintr&auml;gen per STRG+V</b><br/>In eigenen Ansichten k&ouml;nnen nur spezielle Eintr&auml;ge eingef&uuml;gt werden,<br/>die vorher aus derselben Ansicht kopiert wurden.<br/>In anderen Ansichten k&ouml;nnen Dorfkoordinaten aus beliebigen Quellen eingef&uuml;gt werden</html>");
        add(jPaste);

        jDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/document_delete.png"))); // NOI18N
        jDelete.setToolTipText("<html><b>L&ouml;schen von Eintr&auml;gen per ENTF</b></html>");
        add(jDelete);

        jFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ui/document_find.png"))); // NOI18N
        jFind.setToolTipText("<html><b>Suchen nach Eintr&auml;gen per STRG+F</b></html>");
        add(jFind);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jCopy;
    private javax.swing.JLabel jDelete;
    private javax.swing.JLabel jFind;
    private javax.swing.JLabel jPaste;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the searchable
     */
    public boolean isSearchable() {
        return searchable;
    }

    /**
     * @param searchable the searchable to set
     */
    public void setSearchable(boolean searchable) {
        this.searchable = searchable;
        jFind.setVisible(searchable);
    }

    /**
     * @return the copyable
     */
    public boolean isCopyable() {
        return copyable;
    }

    /**
     * @param copyable the copyable to set
     */
    public void setCopyable(boolean copyable) {
        this.copyable = copyable;
        jCopy.setVisible(copyable);
    }

    /**
     * @return the deletable
     */
    public boolean isDeletable() {
        return deletable;
    }

    /**
     * @param deletable the deletable to set
     */
    public void setDeletable(boolean deletable) {
        this.deletable = deletable;
        jDelete.setVisible(deletable);
    }

    /**
     * @return the pastable
     */
    public boolean isPastable() {
        return pastable;
    }

    /**
     * @param pastable the pastable to set
     */
    public void setPastable(boolean pastable) {
        this.pastable = pastable;
        jPaste.setVisible(pastable);
    }
}
